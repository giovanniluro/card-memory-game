{"version":3,"sources":["pages/Main/style.ts","components/Card/style.ts","components/Card/index.tsx","components/Board/style.ts","components/Board/index.tsx","components/ControlPanel/style.ts","components/ControlPanel/index.tsx","pages/Main/index.tsx","global.ts","index.tsx"],"names":["Container","styled","div","Carta","props","rotate","css","hidde","display","Frente","Verso","Card","content","id","cardOne","cardTwo","setCardOne","setCardTwo","useState","setRotate","hidden","setHidden","setDisplay","handleClick","useCallback","Object","entries","length","onClick","onAnimationEnd","e","animationName","size","Cards","Status","Board","numberOfCards","setCurrentMatch","cards","setCards","rightMoves","setRightMoves","totalMoves","setTotalMoves","mistakenMoves","setMistakenMoves","clock","setClock","useEffect","deck","i","push","uuid","setTimeout","split","minutes","seconds","second","Number","minute","slice","console","log","time","map","card","key","ControlPanel","currentMatch","bestMatch","className","color","Main","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9aa3f82c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 40px;\n  border-radius: 12px;\n  background: #403D39;\n`;","import styled, { css } from 'styled-components';\n\ninterface ICarta {\n  rotate: string;\n  hidde: string;\n  display: string;\n}\n\nexport const Container = styled.div`\n  position: relative;\n  height: 120px;\n  width: 80px;\n`;\n\nexport const Carta = styled.div<ICarta>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  transform-style: preserve-3d;\n  transition: transform .5s;\n\n  ${props => props.rotate === 'true' && css `\n    transform: rotateY(180deg);\n  `}\n\n  ${props => props.hidde === 'true' && css `\n    animation: vanish .4s forwards; \n  `}\n\n  ${props => props.display === 'false' && css `\n    display: none;\n  `}\n\n  @keyframes vanish {\n    from {\n      transform: translateY(0);\n      transform: rotateY(180deg);\n      opacity: 1;\n    } to {\n      transform: rotateY(180deg);\n      transform: translateY(-10px);\n      opacity: 0;\n    }\n  }\n`;\n\nexport const Frente = styled.div`\n  height:100%;\n  width: 100%;\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  outline: 5px solid #515C67;\n  background: white;\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n\n`;\n\nexport const Verso = styled.div`\n  height: 100%;\n  width: 100%;\n  background: #424B54;\n  border: 5px solid #818F9C;\n  outline: 5px solid #424B54;\n  backface-visibility: hidden;\n  position: absolute;\n`;","import React, { useState, useCallback } from 'react';\nimport { Container, Carta, Frente, Verso } from './style';\nimport { ICard } from '../Board';\nimport { FiAperture, FiAnchor, FiAward, FiBookOpen, FiCoffee, FiEdit2, FiEye, FiFeather, FiFlag, FiGift, FiSmile, FiGithub, FiHeadphones, FiHeart, FiUmbrella, FiMusic, FiMoon, FiSun, FiTarget, FiTruck } from 'react-icons/fi';\n\ninterface CardProps {\n  id: string;\n  content: number;\n  cardOne: ICard;\n  cardTwo: ICard;\n  setCardOne: (card: ICard) => void;\n  setCardTwo: (card: ICard) => void;\n}\n\nconst Card: React.FC<CardProps> = ({content, id, cardOne, cardTwo, setCardOne, setCardTwo }) => {\n\n  const [rotate, setRotate] = useState(\"false\");\n  const [hidden, setHidden] = useState(\"false\");\n  const [display, setDisplay] = useState(\"true\");\n\n  const handleClick = useCallback(() => {\n    if(Object.entries(cardOne).length === 0) {\n      setCardOne({id, content, setRotate, setHidden});\n      setRotate(\"true\");\n      return;\n    }\n\n    if(Object.entries(cardTwo).length === 0) {\n      if(cardOne){\n        if(cardOne.id !== id) {\n          setCardTwo({id, content, setRotate, setHidden});\n          setRotate(\"true\");\n          return; \n        }\n      }\n    }\n\n  }, [cardOne, cardTwo, content, id, setCardTwo, setCardOne]);\n\n  return(\n    <Container>\n      <Carta onClick={handleClick} display={display} rotate={rotate} hidde={hidden} onAnimationEnd= {\n        (e) => {if(e.animationName === 'vanish') setDisplay(\"false\")}\n      }>\n        <Frente>\n          {content === 0 && <FiAperture size={20} />}\n          {content === 1 && <FiAnchor size={20} />}\n          {content === 2 && <FiCoffee size={20} />}\n          {content === 3 && <FiAward size={20} />}\n          {content === 4 && <FiBookOpen size={20} />}\n          {content === 5 && <FiEdit2 size={20} />}\n          {content === 6 && <FiEye size={20} />}\n          {content === 7 && <FiFeather size={20} />}\n          {content === 8 && <FiFlag size={20} />}\n          {content === 9 && <FiGift size={20} />}\n          {content === 10 && <FiSmile size={20} />}\n          {content === 11 && <FiGithub size={20} />}\n          {content === 12 && <FiHeadphones size={20} />}\n          {content === 13 && <FiHeart size={20} />}\n          {content === 14 && <FiMoon size={20} />}\n          {content === 15 && <FiUmbrella size={20} />}\n          {content === 16 && <FiMusic size={20} />}\n          {content === 17 && <FiSun size={20} />}\n          {content === 18 && <FiTarget size={20} />}\n          {content === 19 && <FiTruck size={20} />}\n        </Frente>\n        <Verso />\n      </Carta>\n    </Container>\n  )\n\n}\n\nexport default Card;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background: #c4cbca;\n  padding: 40px;\n  border-radius: 12px;\n `; \n\nexport const Cards = styled.div`\n  @media(min-width: 1200px) {\n    display: grid;\n    grid-template-columns: repeat(8, 1fr);\n    grid-gap: 20px;\n  }\n\n  @media(max-width: 1199px) {\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    grid-gap: 20px;\n  }\n  \n  @media(max-width: 900px) {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-gap: 20px;\n  }\n\n  @media(max-width: 700px) {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-gap: 20px;\n  }\n\n  @media(max-width: 599px) {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 20px;\n  }  \n  \n`;\n\nexport const Status = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 40px;\n`;","import React, { useEffect, useState } from 'react';\nimport Card from '../../components/Card';\nimport { Container, Cards, Status } from './style';\nimport { uuid } from 'uuidv4';\nimport { IMatch } from '../../pages/Main';\n\nexport interface ICard {\n  id: string;\n  content: number;\n  setRotate?: (rotate: string) => void;\n  setHidden?: (hidden: string) => void;\n}\n\ninterface BoardProps {\n  numberOfCards: number;\n  setCurrentMatch: (match: IMatch) => void;\n}\n\nconst Board: React.FC <BoardProps> = ({ numberOfCards, setCurrentMatch }) => {\n\n  const [cards, setCards] = useState<ICard[]>([]);\n  const [cardOne, setCardOne] = useState<ICard>({} as ICard);\n  const [cardTwo, setCardTwo] = useState<ICard>({} as ICard);\n  const [rightMoves, setRightMoves] = useState(0);\n  const [totalMoves, setTotalMoves] = useState(0);\n  const [mistakenMoves, setMistakenMoves] = useState(0);\n  const [clock, setClock] = useState('0:00');\n\n  //Criando o novo deck\n  useEffect(() => {\n    const deck: ICard[] = [];\n\n    for (let i = 0; i < numberOfCards; i++) {\n      deck.push({\n        content: i,\n        id: uuid()\n      },\n        {\n          content: i,\n          id: uuid()\n        });\n    }\n    //deck.sort(() => Math.random() - 0.5);\n    setCards(deck);\n  }, []);\n\n  //Cronômetro\n  useEffect(() => {\n    setTimeout(() => {\n      const [minutes, seconds] = clock.split(':');\n      let second = Number(seconds) + 1;\n      let minute = Number(minutes);\n      if (second === 60) {\n        second = 0;\n        minute = minute + 1;\n      }\n      if(rightMoves !== numberOfCards) setClock(`${minute}:${('0' + second).slice(-2)}`);\n    }, 1000);\n  }, [clock, rightMoves]);\n\n  //Validando os pares\n  useEffect(() => {\n    if (Object.entries(cardOne).length !== 0 && Object.entries(cardTwo).length !== 0) {\n      if (cardOne.content === cardTwo.content) {\n        setTimeout(() => {\n          console.log('Cartas iguais...!');\n          if (cardOne.setHidden && cardTwo.setHidden) {\n            setRightMoves(rightMoves => rightMoves + 1);\n            cardOne.setHidden(\"true\");\n            cardTwo.setHidden(\"true\");\n            setCardOne({} as ICard);\n            setCardTwo({} as ICard);\n          }\n        }, 800);\n\n      }\n      else {\n        setTimeout(() => {\n          if (cardOne.setRotate && cardTwo.setRotate) {\n            console.log('Cartas diferentes...');\n            setMistakenMoves(mistakenMoves => mistakenMoves + 1);\n            cardOne.setRotate(\"false\");\n            cardTwo.setRotate(\"false\");\n            setCardOne({} as ICard);\n            setCardTwo({} as ICard);\n          }\n        }, 800);\n      }\n      setTotalMoves(totalMoves => totalMoves + 1);\n    }\n  }, [cardOne, cardTwo]);\n\n  //Contando quantos pares corretos foram encontrados\n  useEffect(() => {\n    if (rightMoves === numberOfCards) {\n      const matchDetails = {\n        time: clock,\n        totalMoves: totalMoves,\n        mistakenMoves: mistakenMoves\n      }\n      \n      setCurrentMatch(matchDetails);\n    }\n  }, [rightMoves]);\n\n  return (\n    <Container>\n      <Status>\n        <p>{clock}</p>\n        <p>Jogadas: {totalMoves}</p>\n      </Status>\n      <Cards>\n        {cards.map(card => <Card key={card.id} content={card.content} id={card.id}\n          cardOne={cardOne} cardTwo={cardTwo} setCardOne={setCardOne} setCardTwo={setCardTwo} />)}\n      </Cards>\n    </Container>\n  )\n\n}\n\nexport default Board;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\n  display: flex;\n  flex-direction: column;\n  margin-left: 40px;\n\n  div {\n\n    background: #CCC5B9;\n    width: 100%;\n    padding: 10px 60px 10px 10px;\n    border-radius: 8px;\n    position: relative;\n    \n    h1 {\n      font-size: 22px;\n      color: #252422;\n    }\n\n    p{\n      color: #252422;\n\n      span {\n        font-weight: bold;\n      }\n    }\n\n    svg {\n      position: absolute;\n      top: 10px;\n      right: 10px;\n    }\n\n    &+div {\n      margin-top: 30px;\n    }\n\n  }\n\n`;","import React from 'react';\nimport { IMatch } from '../../pages/Main';\nimport { Container } from './style';\nimport { FaTrophy } from 'react-icons/fa';\n\ninterface ControlPanelProps {\n  currentMatch: IMatch;\n  bestMatch: IMatch;\n}\n\nconst ControlPanel: React.FC<ControlPanelProps> = ({ currentMatch, bestMatch }) => {\n\n  return (\n    <Container>\n      <div className=\"bestMatch\">\n        <h1>Melhor Partida:</h1>\n        <p>Tempo que demorou: <span>{bestMatch.time}</span></p>\n        <p>Fez <span>{bestMatch.totalMoves}</span> jogadas</p>\n        <p>Errou de pares <span>{bestMatch.mistakenMoves}</span> vezes</p>\n        <FaTrophy size={22} color=\"yellow\" />\n      </div> \n      {Object.entries(currentMatch).length > 0 && \n      <div className=\"currentMatch\">\n        <h1>Dados da partida:</h1>\n        <p>Tempo que demorou: <span>{currentMatch.time}</span></p>\n        <p>Fez <span>{currentMatch.totalMoves}</span> jogadas</p>\n        <p>Errou de pares <span>{currentMatch.mistakenMoves}</span> vezes</p>\n      </div> }\n    </Container>\n  );\n}\n\nexport default ControlPanel;","import React, { useState } from 'react';\nimport { Container } from './style';\nimport Board from '../../components/Board';\nimport ControlPanel from '../../components/ControlPanel';\n\nexport interface IMatch {\n  time: string;\n  totalMoves: number;\n  mistakenMoves: number;\n}\n\nconst Main: React.FC = () => {\n\n  const [bestMatch, setBestMatch] = useState<IMatch>({\n    time: '1:55',\n    totalMoves: 42,\n    mistakenMoves: 23\n  } as IMatch);\n  const [currentMatch, setCurrentMatch] = useState<IMatch>({} as IMatch);\n\n  return (\n    <Container>\n      <Board numberOfCards={2} setCurrentMatch={setCurrentMatch} />\n      <ControlPanel currentMatch={currentMatch} bestMatch={bestMatch} />\n    </Container>\n  )\n\n}\n\nexport default Main;","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n\n  * {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    font-family: 'Oswald', sans-serif;\n  }\n\n  body {\n    margin: 40px;\n    background: #252422;\n  }\n\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './pages/Main';\nimport GlobalStyle from './global';\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <Main />\n  </>\n  , document.getElementById('root'));"],"sourceRoot":""}