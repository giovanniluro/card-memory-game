{"version":3,"sources":["pages/Main/style.ts","components/Card/style.ts","components/Card/index.tsx","components/Board/style.ts","components/Board/index.tsx","pages/Main/index.tsx","global.ts","index.tsx"],"names":["Container","styled","div","Carta","props","rotate","css","hidde","Frente","Verso","Card","content","id","cardOne","cardTwo","setCardOne","setCardTwo","useState","setRotate","hidden","setHidden","handleClick","useCallback","Object","entries","length","console","log","onClick","Board","cards","setCards","rightMoves","setRightMoves","useEffect","deck","i","push","uuid","setTimeout","map","card","key","Main","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"kZAEO,IAAMA,EAAYC,IAAOC,IAAV,K,4kCCKf,IAAMF,EAAYC,IAAOC,IAAV,KAMTC,EAAQF,IAAOC,IAAV,KAOd,SAAAE,GAAK,MAAqB,SAAjBA,EAAMC,QAAqBC,YAA3B,QAIT,SAAAF,GAAK,MAAoB,SAAhBA,EAAMG,OAAoBD,YAA1B,QAKAE,EAASP,IAAOC,IAAV,KAcNO,EAAQR,IAAOC,IAAV,KCSHQ,EAvCmB,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,QAASC,EAAmD,EAAnDA,GAAIC,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAAiB,EAElEC,mBAAS,SAFyD,mBAEvFZ,EAFuF,KAE/Ea,EAF+E,OAGlED,mBAAS,SAHyD,mBAGvFE,EAHuF,KAG/EC,EAH+E,KAKxFC,EAAcC,uBAAY,WAC9B,OAAsC,IAAnCC,OAAOC,QAAQX,GAASY,QACzBC,QAAQC,IAAI,qBACZZ,EAAW,CAACH,KAAID,UAASO,YAAWE,mBACpCF,EAAU,SAI0B,IAAnCK,OAAOC,QAAQV,GAASW,QACtBZ,GACEA,EAAQD,KAAOA,GAChBc,QAAQC,IAAI,qBACZX,EAAW,CAACJ,KAAID,UAASO,YAAWE,mBACpCF,EAAU,cALhB,IAWC,CAACL,EAASC,IAEb,OACE,kBAAC,EAAD,KACE,kBAACX,EAAD,CAAOyB,QAASP,EAAahB,OAAQA,EAAQE,MAAOY,GAClD,kBAACX,EAAD,KACGG,GAEH,kBAACF,EAAD,S,4KC3CD,IAAMT,EAAYC,IAAOC,IAAV,K,OC4EP2B,EAlES,WAAO,IAAD,EAEFZ,mBAAkB,IAFhB,mBAErBa,EAFqB,KAEdC,EAFc,OAGEd,mBAAgB,IAHlB,mBAGrBJ,EAHqB,KAGZE,EAHY,OAIEE,mBAAgB,IAJlB,mBAIrBH,EAJqB,KAIZE,EAJY,OAKQC,mBAAS,GALjB,mBAKrBe,EALqB,KAKTC,EALS,KAyD5B,OAlDAC,qBAAU,WAGR,IAFA,IAAMC,EAAgB,GAEbC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAKE,KAAK,CACR1B,QAASyB,EACTxB,GAAI0B,kBAEJ,CACE3B,QAASyB,EACTxB,GAAI0B,mBAIVP,EAASI,KACR,IAEHD,qBAAU,WAC+B,IAAnCX,OAAOC,QAAQX,GAASY,QAAmD,IAAnCF,OAAOC,QAAQV,GAASW,SAC9DZ,EAAQF,UAAYG,EAAQH,QAC/B4B,YAAW,WACTb,QAAQC,IAAI,qBACRd,EAAQO,WAAaN,EAAQM,YAC9BP,EAAQO,UAAU,QAClBN,EAAQM,UAAU,QAClBL,EAAW,IACXC,EAAW,IACXiB,GAAc,SAAAD,GAAU,OAAIA,EAAa,QAE3C,KAIFO,YAAW,WACL1B,EAAQK,WAAaJ,EAAQI,YAC/BQ,QAAQC,IAAI,wBACZd,EAAQK,UAAU,SAClBJ,EAAQI,UAAU,SAClBH,EAAW,IACXC,EAAW,OAEZ,QAGN,CAACH,EAASC,IAEboB,qBAAU,WACRR,QAAQC,IAAIK,KACX,CAACA,IAGF,kBAAC,EAAD,KACGF,EAAMU,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAMC,IAAKD,EAAK7B,GAAID,QAAS8B,EAAK9B,QAASC,GAAI6B,EAAK7B,GACrEC,QAASA,EAASC,QAASA,EAASC,WAAYA,EAAYC,WAAYA,SC1DjE2B,EAVQ,WAErB,OACE,kBAAC3C,EAAD,KACE,kBAAC,EAAD,Q,qJCNS4C,kBAAf,KCGAC,IAASC,OACP,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEAC,SAASC,eAAe,W","file":"static/js/main.04bb7c4f.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background: #c4cbca;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  min-height: 100vh;\n`;","import styled, { css } from 'styled-components';\n\ninterface ICarta {\n  rotate: string;\n  hidde: string;\n}\n\nexport const Container = styled.div`\n  position: relative;\n  height: 120px;\n  width: 80px;\n`;\n\nexport const Carta = styled.div<ICarta>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  transform-style: preserve-3d;\n  transition: transform .6s;\n\n  ${props => props.rotate === \"true\" && css `\n    transform: rotateY(180deg);\n  `}\n\n  ${props => props.hidde === \"true\" && css `\n    display: none;\n  `}\n`;\n\nexport const Frente = styled.div`\n  height:100%;\n  width: 100%;\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  outline: 5px solid #515C67;\n  background: white;\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n\n`;\n\nexport const Verso = styled.div`\n  height: 100%;\n  width: 100%;\n  background: #424B54;\n  border: 5px solid #818F9C;\n  outline: 5px solid #424B54;\n  backface-visibility: hidden;\n  position: absolute;\n`;","import React, { useState, useCallback } from 'react';\nimport { Container, Carta, Frente, Verso } from './style';\nimport { ICard } from '../Board';\n\ninterface CardProps {\n  id: string;\n  content: number;\n  cardOne: ICard;\n  cardTwo: ICard;\n  setCardOne: (card: ICard) => void;\n  setCardTwo: (card: ICard) => void;\n}\n\nconst Card: React.FC<CardProps> = ({content, id, cardOne, cardTwo, setCardOne, setCardTwo }) => {\n\n  const [rotate, setRotate] = useState(\"false\");\n  const [hidden, setHidden] = useState(\"false\");\n\n  const handleClick = useCallback(() => {\n    if(Object.entries(cardOne).length === 0) {\n      console.log(\"setando card 1...\");\n      setCardOne({id, content, setRotate, setHidden});\n      setRotate(\"true\");\n      return;\n    }\n\n    if(Object.entries(cardTwo).length === 0) {\n      if(cardOne){\n        if(cardOne.id !== id) {\n          console.log(\"setando card 2...\");\n          setCardTwo({id, content, setRotate, setHidden});\n          setRotate(\"true\");\n          return; \n        }\n      }\n    }\n\n  }, [cardOne, cardTwo]);\n\n  return(\n    <Container>\n      <Carta onClick={handleClick} rotate={rotate} hidde={hidden}>\n        <Frente>\n          {content}\n        </Frente>\n        <Verso />\n      </Carta>\n    </Container>\n  )\n\n}\n\nexport default Card;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 100px;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-gap: 20px;\n`; ","import React, { useEffect, useState, useCallback } from 'react';\nimport Card from '../../components/Card';\nimport { Container } from './style';\nimport { uuid } from 'uuidv4';\n\nexport interface ICard {\n  id: string;\n  content: number;\n  setRotate?: (rotate: string) => void;\n  setHidden?: (hidden: string) => void;\n}\n\nconst Board: React.FC = () => {\n\n  const [cards, setCards] = useState<ICard[]>([]);\n  const [cardOne, setCardOne] = useState<ICard>({} as ICard);\n  const [cardTwo, setCardTwo] = useState<ICard>({} as ICard);\n  const [rightMoves, setRightMoves] = useState(0);\n\n  useEffect(() => {\n    const deck: ICard[] = [];\n\n    for (let i = 0; i < 10; i++) {\n      deck.push({\n        content: i,\n        id: uuid()\n      },\n        {\n          content: i,\n          id: uuid()\n        });\n    }\n\n    setCards(deck);\n  }, []);\n\n  useEffect(() => {\n    if (Object.entries(cardOne).length !== 0 && Object.entries(cardTwo).length !== 0) {\n      if (cardOne.content === cardTwo.content) {\n       setTimeout(() => {\n         console.log('Cartas iguais...!');\n         if( cardOne.setHidden && cardTwo.setHidden ) {\n            cardOne.setHidden(\"true\");\n            cardTwo.setHidden(\"true\");\n            setCardOne({} as ICard);\n            setCardTwo({} as ICard);\n            setRightMoves(rightMoves => rightMoves + 1);\n         }\n       }, 1000);\n\n      }\n      else {\n        setTimeout(() => {\n          if (cardOne.setRotate && cardTwo.setRotate) {\n            console.log('Cartas diferentes...');\n            cardOne.setRotate(\"false\");\n            cardTwo.setRotate(\"false\");\n            setCardOne({} as ICard);\n            setCardTwo({} as ICard);\n          }\n        }, 1000);\n      }\n    }\n  }, [cardOne, cardTwo]);\n\n  useEffect(() => {\n    console.log(rightMoves);\n  }, [rightMoves]);\n\n  return (\n    <Container>\n      {cards.map(card => <Card key={card.id} content={card.content} id={card.id}\n        cardOne={cardOne} cardTwo={cardTwo} setCardOne={setCardOne} setCardTwo={setCardTwo} />)}\n    </Container>\n  )\n\n}\n\nexport default Board;","import React from 'react';\nimport { Container } from './style';\nimport Board from '../../components/Board';\n\nconst Main: React.FC = () => {\n\n  return (\n    <Container>\n      <Board />\n    </Container>\n  )\n\n}\n\nexport default Main;","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n\n  * {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n  }\n\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './pages/Main';\nimport GlobalStyle from './global';\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <Main />\n  </>\n  , document.getElementById('root'));"],"sourceRoot":""}